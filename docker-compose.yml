version: '3.4'

x-common-config:
  &common-config
  image: "{{ project_name }}:local"
  volumes:
    - ./{{ project_name }}:/usr/src/app/{{ project_name }}
    - ./users:/usr/src/app/users
  depends_on:
    - redis
    - postgres
    - memcached

x-common-environment:
  &common-environment
  DEBUG: "True"
  DATABASE_URL: ${DATABASE_URL}
  ALLOWED_HOSTS: "*"
  RUN_MIGRATIONS: "0"
  REDIS_URL: redis://redis:6379
  MEMCACHED_URL: memcached://memcached
  LOGGING_LEVEL: INFO


volumes:
  postgres_data: {}

services:

  postgres:
    image: postgres:10
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: {{ project_name }}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:4

  memcached:
    image: memcached:alpine

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: EXPERIMENTAL
    command: python manage.py runserver 0.0.0.0:8000
#    For debug uncomment below
#    command: python manage.py runserver 0.0.0.0:8000 --pdb
#    stdin_open: true
#    tty: true
    << : *common-config
    environment:
      << : *common-environment
      RUN_MIGRATIONS: "1"
    ports:
      - 8000:8000

  worker:
    command: celery -A {{ project_name }} worker -l info
    << : *common-config
    environment:
      << : *common-environment
      RUN_MIGRATIONS: "0"
      C_FORCE_ROOT: "true"

  beat:
    command: celery -A {{ project_name }} beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    << : *common-config
    environment:
      << : *common-environment
      RUN_MIGRATIONS: "0"
      C_FORCE_ROOT: "true"

  flower:
    command: celery flower -A {{ project_name }} -l info --address=0.0.0.0 --port=5555 --persistent
    << : *common-config
    environment:
      << : *common-environment
      RUN_MIGRATIONS: "0"
      C_FORCE_ROOT: "true"
    ports:
    - 5555:5555


